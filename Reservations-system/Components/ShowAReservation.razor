@inject IJSRuntime JSRuntime

<h4>Gæsteinfo</h4>
@if (ChosenReservation != null)
{
    <div>
        <p>
            Navn: @ChosenReservation.Guest.Name
        </p>
        <p>
            TelefonNummer: @ChosenReservation.Guest.PhoneNumber
        </p>
        <p>
            Mail: @ChosenReservation.Guest.Mail
        </p>
    </div>
    <h4>
        Reservations info
    </h4>
    <div>
        <p>
            Reservations periode
        </p>
        <p>
            @ChosenReservation.ReservationPeriod()
        </p>
    </div>
    @if (ChosenReservation.Confirmed == false)
    {
        <p>
            <button class="btn btn-primary" @onclick="Confirm">Bekræft</button>
        </p>
    }

    <p>
        <button class="btn btn-primary" @onclick="DeleteReservation">@(ChosenReservation.Confirmed == true ? "Slet" : "Annuller")</button>
        <button class="btn btn-primary" @onclick="(() => editMode = !editMode)">Rediger</button>
    </p>
}

@code {

    [CascadingParameter(Name = "chosenReservation")]
    public Reservation ChosenReservation { get; set; }

    [CascadingParameter(Name = "editMode")]
    public bool editMode { get; set; } //This is dummy data but should be changed when DB is set up

    async Task DeleteReservation()
    {
        if (!await JSRuntime.InvokeAsync<bool>("confirm", "Er du sikker på at du vil slette denne reservation?"))
            return;
        ChosenReservation.Guest.Name = "Deleted";
        ChosenReservation.StartDate = new DateTime(2021, 1, 1);
        //Reservations.Remove(ShowThisRes);
        ////ShowThisRes = null;
        ////Delete from DB
        //await ShowThisResChanged.InvokeAsync(null);
        //await ReservationsChanged.InvokeAsync(Reservations);
    }

    async Task Confirm()
    {
        if (!await JSRuntime.InvokeAsync<bool>("confirm", "Er du sikker på at du vil bekræfte denne reservation?"))
            return;
    }


    //[Parameter]
    //public bool EditMode { get; set; }
    //
    //[Parameter]
    //public EventCallback<bool> EditModeChanged { get; set; }
    //
    //public async Task ChangeEditMode()
    //{
    //    await EditModeChanged.InvokeAsync(!EditMode);
    //}
    //
    //[Parameter]
    //public Reservation ShowThisRes { get; set; }
    //
    //[Parameter]
    //public EventCallback<Reservation> ShowThisResChanged { get; set; }
    //
    //[Parameter]
    //public List<Reservation> Reservations { get; set; }
    //
    //[Parameter]
    //public EventCallback<List<Reservation>> ReservationsChanged { get; set; }
}